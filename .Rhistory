foo
strsplit(foo, split = " ")
strsplit(foo, split = ",")
x <- c("AA196000;actinin, alpha 3",
"AA464163;acyl-Coenzyme A dehydrogenase, very long chain",
"3E7;W15277;No Annotation")
strsplit2(x,split=";")
library(limma)
x <- c("AA196000;actinin, alpha 3",
"AA464163;acyl-Coenzyme A dehydrogenase, very long chain",
"3E7;W15277;No Annotation")
strsplit2(x,split=";")
strsplit2(foo,split="")
variable <- as.vector(peptidos$sequence)
class(variable)
variable <- as.vector(peptidos$sequence)
class(variable)
# Code maps:
code3 <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H",
"I", "L", "K", "M", "F", "P", "S", "T", "W",
"Y", "V")
code1 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
# For each code replace 3letter code by 1letter code:
for (i in 1:length(code3))
{
variable <- gsub(code3[i],code1[i],variable,ignore.case=TRUE)
}
str(variable)
class(peptidos$sequence)
variable <- as.vector(peptidos$sequence)
class(variable)
# Code maps:
code3 <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H",
"I", "L", "K", "M", "F", "P", "S", "T", "W",
"Y", "V")
code1 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
# For each code replace 3letter code by 1letter code:
for (i in 1:length(code3))
{
variable <- gsub(code3[i],code1[i],variable,ignore.case=FALSE)
}
str(variable)
head(peptidos$sequence)
# Code maps:
code3 <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H",
"I", "L", "K", "M", "F", "P", "S", "T", "W",
"Y", "V")
code1 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
# For each code replace 3letter code by 1letter code:
for (i in variable:length(code3))
{
variable <- gsub(code3[i],code1[i],variable,ignore.case=FALSE)
}
for (i in variable)
{
variable <- gsub(code3[i],code1[i],variable,ignore.case=FALSE)
}
str(variable)
for (i in 1:length(variable))
{
variable <- gsub(code3[i],code1[i],variable,ignore.case=FALSE)
}
str(variable)
## named capture
notables <- c("  Ben Franklin and Jefferson Davis",
"\tMillard Fillmore")
# name groups 'first' and 'last'
name.rex <- "(?<first>[[:upper:]][[:lower:]]+) (?<last>[[:upper:]][[:lower:]]+)"
(parsed <- regexpr(name.rex, notables, perl = TRUE))
gregexpr(name.rex, notables, perl = TRUE)[[2]]
parse.one <- function(res, result) {
m <- do.call(rbind, lapply(seq_along(res), function(i) {
if(result[i] == -1) return("")
st <- attr(result, "capture.start")[i, ]
substring(res[i], st, st + attr(result, "capture.length")[i, ] - 1)
}))
colnames(m) <- attr(result, "capture.names")
m
}
parse.one(notables, parsed)
length(peptidos$sequence)
variable <- as.vector(peptidos$sequence)
length(variable)
indx <- sapply(foo, is.numeric)
indx
library(ggseqlogo)
# dataset <- read.csv(file=file.path(params$folder.data,params$file1))
# length(complete.cases(dataset))
library(readr)
peptidos <- read_delim("dataset/peptidos.csv",
";", escape_double = FALSE, trim_ws = TRUE)
length(complete.cases(peptidos))
str(peptidos)
# Plot a single DNA sequence logo
pepseq<- as.vector(peptidos$sequence)
ggseqlogo(pepseq,seq_type='auto', namespace = 'NULL', font='helvetica_regular', col_scheme = 'nucleotide')
ggseqlogo(peptidos$sequence, facet = "wrap")
library(ggseqlogo)
# dataset <- read.csv(file=file.path(params$folder.data,params$file1))
# length(complete.cases(dataset))
library(readr)
peptidos <- read_delim("dataset/peptidos.csv",
";", escape_double = FALSE, trim_ws = TRUE)
length(complete.cases(peptidos))
str(peptidos)
class(peptidos$sequence)
length(peptidos$sequence)
variable[1]
sapply(variable[1])
sapply(variable[1], seq)
txt <- c("The", "licenses", "for",
"most", "software", "are",
"designed", "to", "take", "away",
"your", "freedom", "to", "share",
"and", "change", "it.", "",
"By", "contrast,", "the", "GNU",
"General", "Public", "License",
"is", "intended", "to", "guarantee",
"your", "freedom", "to", "share",
"and", "change", "free", "software",
"--", "to", "make", "sure",
"the", "software", "is", "free",
"for", "all", "its", "users")
(i <- grep("[gu]", txt))
for (i in variable){
stopifnot(variable[i] == grep(code3[i],
variable, value = TRUE))
(ot <- sub(code3[i], code1[i], variable))
}
for (i in variable){
stopifnot(variable[i] == grep(code3[i], value = TRUE))
(ot <- sub(code3[i], code1[i], variable))
}
for (i in variable){
stopifnot(variable[i] == grep(code3[i], variable, value = TRUE))
(ot <- sub(code3[i], code1[i], variable))
}
for (i in variable){
(ot <- sub(code3[i], code1[i], variable))
}
str(variable)
for (i in variable){
(ot <- sub(code3[i], code1[i], variable))
}
str(ot)
for (i in 1:length(variable))
{    variable <- gsub(code3[i],code1[i],variable,ignore.case=FALSE)
}
str(variable)
for (i in 1:length(variable)){
stringr::str_extract_all(variable[i], code3[i], simplify = TRUE)}
variable
peptidos <- read_delim("dataset/peptidos.csv",
";", escape_double = FALSE, trim_ws = TRUE)
variable <- as.vector(peptidos$sequence)
for (i in 1:length(variable)){
stringr::str_replace_all(variable[i], code3[i],code1[i])
}
variable
for (i in variable){
stringr::str_replace_all(variable[i], code3[i],code1[i])
}
variable
for (i in variable){
gsub(code3[i], code1[i], variable)
}
variable
for (i in length(code3[i])){
gsub(code3[i], code1[i], variable)
}
variable
for (i in 1:length(code3[i])){
gsub(code3[i], code1[i], variable)
}
variable
for (i in 1:length(code3)){
gsub(code3[i], code1[i], variable)
}
variable
strsplit(variable[1], "")
# For each code replace 3letter code by 1letter code:
for (i in 1:length(variable))
{    variable <- gsub(code3[i],code1[i],variable,ignore.case=FALSE)
}
variable <- as.vector(peptidos$sequence)
for (i in 1:length(variable)){
m <- strsplit(variable[i], "")
m <- gsub(code3[i],code1[i],m{i},ignore.case=FALSE)
for (i in 1:length(variable)){
strsplit(variable[i], "")
gsub(code3[i],code1[i],variable,ignore.case=FALSE)
}
head(variable)
variable <- as.vector(peptidos$sequence)
for (i in variable){
m <- strsplit(variable[i], "")
gsub(code3[i],code1[i],m,ignore.case=FALSE)
}
head(variable)
m <- strsplit(variable[1], "")
m <- strsplit(variable[1], "")
mp <- gsub(code3[i],code1[i],m,ignore.case=FALSE)
for (i in 1:mp){
mp <- gsub(code3[i],code1[i],m,ignore.case=FALSE)
}
variable <- as.vector(peptidos$sequence)
m <- strsplit(variable[1], "")
m
for (i in 1:m){
m <- gsub(code3[i],code1[i],m,ignore.case=FALSE)
}
code3 <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H",
"I", "L", "K", "M", "F", "P", "S", "T", "W",
"Y", "V")
code1 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
# Variables:
variable <- as.vector(peptidos$sequence)
foo <- strsplit(variable[1], "")
for (i in 1:length(code3))
{
foo <- gsub(code3[i],code1[i],foo,ignore.case=TRUE)
}
foo
str(foo)
variable <- as.vector(peptidos$sequence)
foo <- strsplit(variable[1], "")
foo
str(foo)
for (i in 1:length(code3))
{
foo <- gsub(code3[i],code1[i],foo)
}
foo
View(foo)
convert <- function(l) {
map <- c("A", "R", "N", "D", "C", "E", "Q", "G", "H", "I",
"L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
names(map) <- c("ALA", "ARG", "ASN", "ASP", "CYS", "GLU", "GLN",
"GLY", "HIS", "ILE", "LEU", "LYS", "MET", "PHE",
"PRO", "SER", "THR", "TRP", "TYR", "VAL")
sapply(strsplit(l, "(?<=[A-Z]{3})", perl = TRUE),
function(x) paste(map[x], collapse = ""))
}
convert(c("ARGHISLEULEULYS", "METHISARGARGMET"))
variable <- as.vector(peptidos$sequence)
foo <- strsplit(variable[1], "")
convert(foo)
variable <- as.numeric(peptidos$sequence)
foo <- strsplit(variable[1], "")
variable <- as.vector(peptidos$sequence)
foo <- strsplit(variable[1], "")
convert <- function(l) {
names(map) <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", #tb code1
"I", "L", "K", "M", "F", "P", "S", "T", "W",
"Y", "V")
map <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
sapply(strsplit(l, "(?<=[A-Z]{3})", perl = TRUE),
function(x) paste(map[x], collapse = ""))
}
convert(c("ARGHISLEULEULYS", "METHISARGARGMET"))
convert <- function(l) {
map <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
names(map) <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, "(?<=[A-Z]{3})", perl = TRUE),
function(x) paste(map[x], collapse = ""))
}
convert(c("ARGHISLEULEULYS", "METHISARGARGMET"))
convert <- function(l) {
code2 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
code1 <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, code1[x], perl = TRUE),
function(x) paste(code2[x], collapse = ","))
}
convert(c("ARGHISLEULEULYS", "METHISARGARGMET"))
convert <- function(l) {
code2 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
code1 <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, "(?[A-Z])", perl = TRUE),
function(x) paste(code2[x], collapse = ","))
}
convert(c("ARGHISLEULEULYS", "METHISARGARGMET"))
convert <- function(l) {
code2 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
code1 <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, "([A-Z])", perl = TRUE),
function(x) paste(code2[x], collapse = ","))
}
convert(c("ARGHISLEULEULYS", "METHISARGARGMET"))
convert <- function(l) {
code2 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
code1 <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, "", perl = TRUE),
function(x) paste(code2[x], collapse = ","))
convert(c("ARGHISLEULEULYS", "METHISARGARGMET"))
convert(c("ARGHISLEULEULYS", "METHISARGARGMET"))
convert <- function(l) {
code2 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
code1 <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, "", perl = TRUE),
function(x) paste(code2[x], collapse = ","))
}
convert(c("ARGHISLEULEULYS", "METHISARGARGMET"))
convert <- function(l) {
code2 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
code1 <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, "", perl = FALSE),
function(x) paste(code2[x], collapse = ","))
}
convert(c("ARGHISLEULEULYS", "METHISARGARGMET"))
convert <- function(l) {
code2 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
code1 <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, "", perl = TRUE),
function(x) gsub(code2[x], collapse = ","))
}
convert(c("ARGHISLEULEULYS", "METHISARGARGMET"))
convert <- function(l) {
code2 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
code1 <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, "", perl = TRUE),
function(x) gsub(code1[x], code2[x], l))
}
convert(c("ARGHISLEULEULYS", "METHISARGARGMET"))
convert <- function(l) {
code2 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
code1 <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, "", perl = TRUE),
function(x) gsub(code1[x], code2[x], l, ignore.case = FALSE))
}
convert(c("ARGHISLEULEULYS", "METHISARGARGMET"))
convert("ARGHISLEULEULYS")
convert <- function(l) {
names(code1) <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
code1 <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, "", perl = TRUE),
function(x) paste(code1[x], collapse = ""))
}
variable <- as.vector(peptidos$sequence)
foo <- strsplit(variable[1], "")
foo
head(variable)
convert(c("LMAFYLYEV", "HQRLAPTMP"))
convert <- function(l) {
code1 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
names(code1) <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, "", perl = TRUE),
function(x) paste(code1[x], collapse = ""))
}
convert(c("LMAFYLYEV", "HQRLAPTMP"))
data <- convert(c("LMAFYLYEV", "HQRLAPTMP"))
strsplit(data, "", perl = TRUE)
variable <- peptidos$sequence
convert <- function(l) {
code1 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
names(code1) <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, "", perl = TRUE),
function(x) paste(code1[x], collapse = ""))
}
data <- convert(variable)
dataset <- strsplit(data, "", perl = TRUE)
str(dataset)
View(dataset)
dataset[1]
dataset <- as.numeric(dataset)
dataset <- as.vector(dataset)
View(dataset)
dataset[1]
dataset <- as.matrix(dataset)
dataset[1]
dataset <- as.matrix(as.numeric(dataset))
dataset <- as.numeric(as.matrix(dataset))
data <- convert(variable)
dataset <- strsplit(data, "", perl = TRUE)
dataset2 <- as.numeric(as.character(dataset))
dataset2[1]
dataset2 <- as.numeric(as.doble(dataset))
class(dataset)
dataset2[2]
dataset[2]
dataset2 <- as.data.frame(dataset)
View(dataset2)
x<- c(V1:V180)
x <- V1:V180
v1 <- "V" + seq(1, 180, by = 1)
v1 <- "V" + print(seq(1, 180, by = 1))
v1 <- seq(1, 180, by = 1)
dataset2 <- as.data.frame(dataset, col.names = v1)
data <- convert(variable)
v1 <- seq(1, 180, by = 1)
dataset <- as.data.frame(strsplit(data, "", perl = TRUE), col.names = v1)
View(dataset)
install.packages("mltools")
install.packages("mltools")
install.packages("mltools")
require(knitr)
knitr::opts_chunk$set(echo = TRUE, comment = NULL, cache=TRUE, fig.width = 7, fig.height = 7,
message = FALSE, warning = FALSE)
options(width=90)
Sys.setlocale("LC_TIME", "C")
convert <- function(l) {
code1 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
names(code1) <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, "", perl = TRUE),
function(x) paste(code1[x], collapse = ""))
}
variable <- peptidos$sequence
data <- convert(variable)
v1 <- seq(1, 180, by = 1)
dataset <- as.data.frame(t(strsplit(data, "", perl = TRUE)), col.names = v1)
View(dataset)
data <- convert(variable)
v1 <- seq(1, 180, by = 1)
dataset <- as.data.frame(t(strsplit(data, "", perl = TRUE)), row.names = v1)
View(dataset)
data <- convert(variable)
v1 <- seq(1, 180, by = 1)
dataset <- as.data.frame(strsplit(data, "", perl = TRUE))
dataset2 <- as.data.frame(t(dataset), col.names = v1)
View(dataset)
View(dataset2)
data <- convert(variable)
v1 <- seq(1, 180, by = 1)
dataset <- as.data.frame(strsplit(data, "", perl = TRUE), col.names = FALSE)
dataset2 <- as.data.frame(t(dataset), col.names = v1, row.names = FALSE)
variable <- peptidos$sequence
data <- convert(variable)
v1 <- seq(1, 180, by = 1)
dataset <- as.data.frame(strsplit(data, "", perl = TRUE))
dataset2 <- as.data.frame(t(dataset), col.names = v1, row.names = FALSE)
View(dataset2)
variable <- peptidos$sequence
data <- convert(variable)
v1 <- seq(1, 180, by = 1)
DTHGO <- as.data.frame(t(as.data.frame(strsplit(data, "", perl = TRUE)), col.names = v1, row.names = FALSE))
ALEITG <- as.data.frame(t(as.data.frame(strsplit(data, "", perl = TRUE))), col.names = v1, row.names = FALSE)
View(ALEITG)
rm()
gc()
rm()
library(readr)
require(knitr)
knitr::opts_chunk$set(echo = TRUE, comment = NULL, cache=TRUE, fig.width = 7, fig.height = 7,
message = FALSE, warning = FALSE)
options(width=90)
Sys.setlocale("LC_TIME", "C")
libraries <- c("neuralnet", "NeuralNetTools", "ggplot2" ,"caret")
check.libraries <- is.element(libraries, installed.packages()[, 1])==FALSE
libraries.to.install <- libraries[check.libraries]
if (length(libraries.to.install!=0)) {
install.packages(libraries.to.install)
}
success <- sapply(libraries,require, quietly = FALSE,  character.only = TRUE)
if(length(success) != length(libraries)) {stop("A package failed to return a success in require() function.")}
library(ggseqlogo)
# dataset <- read.csv(file=file.path(params$folder.data,params$file1))
# length(complete.cases(dataset))
library(readr)
peptidos <- read_delim("dataset/peptidos.csv",
";", escape_double = FALSE, trim_ws = TRUE)
length(complete.cases(peptidos))
str(peptidos)
# Plot a single DNA sequence logo
pepseq<- as.vector(peptidos$sequence)
ggseqlogo(pepseq,seq_type='auto', namespace = 'NULL', font='helvetica_regular', col_scheme = 'nucleotide')
ggseqlogo(peptidos$sequence, facet = "wrap")
convert <- function(l) {
code1 <- c("10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001")
names(code1) <- c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")
sapply(strsplit(l, "", perl = TRUE),
function(x) paste(code1[x], collapse = ""))
}
variable <- peptidos$sequence
data <- convert(variable)
v1 <- seq(1, 180, by = 1)
dataset <- as.data.frame(t(as.data.frame(strsplit(data, "", perl = TRUE))), col.names = v1, row.names = FALSE)
dataset[1]
data[1]
strsplit(data, "", perl = TRUE)
data[[1]]
strsplit(data, "", perl = TRUE)
data[[1]]
variable <- peptidos$sequence
data <- convert(variable)
v1 <- seq(1, 180, by = 1)
dataset <- as.data.frame(t(as.data.frame(strsplit(data, "", perl = TRUE))), col.names = v1, row.names = FALSE)
prueba <- as.vector(strsplit(data, "", perl = TRUE))
prueba[1]
data.vector <- as.numeric(as.vector(strsplit(data, "", perl = TRUE)))
data.vector <- as.vector(strsplit(data, "", perl = TRUE))
data.vector[1]
variable <- peptidos$sequence
data <- convert(variable)
v1 <- seq(1, 180, by = 1)
# como data frame
dataset <- as.data.frame(t(as.data.frame(strsplit(data, "", perl = TRUE))), col.names = v1, row.names = FALSE)
data.vector2 <- as.vector(dataset)
data.vector2[1]
str(data.vector2[1])
variable <- peptidos$sequence
data <- convert(variable)
v1 <- seq(1, 180, by = 1)
# como data frame
dataset <- as.data.frame(t(as.data.frame(strsplit(data, "", perl = TRUE))), col.names = v1, row.names = FALSE)
# como vector
dataset2 <- as.data.frame(strsplit(data, "", perl = TRUE))
data.vector2 <- as.vector(dataset2)
View(dataset2)
data.vector2[1]
dataset2 <- as.data.frame(strsplit(data, "", perl = TRUE), col.names = FALSE)
data.vector2 <- as.vector(dataset2)
View(dataset2)
data.vector2[1]
